<html><body><pre><strong>


<font color="#1E90FF">#a = [] </font>

def square():
    """Updates global array  a  in place so that each of its ints are squared"""
    <font color="#008B00">"""{ pre  True
         post forall 0 <= i < len(a), a[i] == a_in[i] * a_in[i]
    }"""</font>
    global a
    a_in = a
    <font color="#1E90FF">#PREMISES FOR NEXT LINE: </font>
    <font color="#1E90FF"># True</font>
    <font color="#1E90FF"># forall 0 <= _i < len(a), (a[_i] == a_in[_i])</font>
    <font color="#1E90FF"># (len(a) == len(a_in))</font>
    x = 0
    <font color="#1E90FF">#PREMISES FOR ATTACHED PROOF, IF ANY: </font>
    <font color="#1E90FF"># (x == 0)</font>
    <font color="#1E90FF"># True</font>
    <font color="#1E90FF"># forall 0 <= _i < len(a), (a[_i] == a_in[_i])</font>
    <font color="#1E90FF"># (len(a) == len(a_in))</font>
    <font color="#008B00">"""{ 1.<font color="#00FF00">OK</font> forall 0 <= _i < len(a), a[_i] == a_in[_i]  premise
         2.<font color="#00FF00">OK</font> forall 0 <= i < len(a), a[i] == a_in[i]  substindex 1
         3.<font color="#00FF00">OK</font> x == 0                                   premise
         4.<font color="#00FF00">OK</font> forall x <= i < len(a), a[i] == a_in[i]  subst 3 2
         5.<font color="#00FF00">OK</font> forall 0 <= i < x, a[i] == a_in[i] * a_in[i]   foralli 3
         5.<font color="#00FF00">OK</font> return 4 5
    }"""</font>
    <font color="#1E90FF">#PREMISES FOR NEXT LINE: </font>
    <font color="#1E90FF"># forall x <= i < len(a), (a[i] == a_in[i])</font>
    <font color="#1E90FF"># forall 0 <= i < x, (a[i] == (a_in[i] * a_in[i]))</font>
    while x != len(a) :
        <font color="#008B00">"""{ invariant  (forall 0 <= i < x, a[i] == a_in[i] * a_in[i]) and (forall x <= i < len(a), a[i] == a_in[i])
             modifies x, a
        }"""</font>
        <font color="#1E90FF">#PREMISES FOR LOOP BODY: </font>
        <font color="#1E90FF"># (x != len(a))</font>
        <font color="#1E90FF"># (forall 0 <= i < x, (a[i] == (a_in[i] * a_in[i])) and forall x <= i < len(a), (a[i] == a_in[i]))</font>
        <font color="#008B00">"""{ 1.<font color="#00FF00">OK</font> (forall 0 <= i < x, a[i] == a_in[i] * a_in[i]) and (forall x <= i < len(a), a[i] == a_in[i])     premise
             2.<font color="#00FF00">OK</font> forall 0 <= i < x, a[i] == a_in[i] * a_in[i]    ande 1
             3.<font color="#00FF00">OK</font> forall x <= i < len(a), a[i] == a_in[i]         ande 1
             4.<font color="#00FF00">OK</font> return 2 3
        }"""</font>
        <font color="#1E90FF">#PREMISES FOR NEXT LINE: </font>
        <font color="#1E90FF"># forall 0 <= i < x, (a[i] == (a_in[i] * a_in[i]))</font>
        <font color="#1E90FF"># forall x <= i < len(a), (a[i] == a_in[i])</font>
        <font color="#CD6600">assert</font> x >= 0  <font color="#1E90FF"># this is actually an invariant</font>
        <font color="#1E90FF">#PREMISES FOR NEXT LINE: </font>
        <font color="#1E90FF"># (x >= 0)</font>
        <font color="#1E90FF"># forall 0 <= i < x, (a[i] == (a_in[i] * a_in[i]))</font>
        <font color="#1E90FF"># forall x <= i < len(a), (a[i] == a_in[i])</font>
        <font color="#CD6600">assert</font> x < len(a)  <font color="#1E90FF"># this is actually an invariant</font>
        <font color="#1E90FF">#PREMISES FOR NEXT LINE: </font>
        <font color="#1E90FF"># (x < len(a))</font>
        <font color="#1E90FF"># (x >= 0)</font>
        <font color="#1E90FF"># forall 0 <= i < x, (a[i] == (a_in[i] * a_in[i]))</font>
        <font color="#1E90FF"># forall x <= i < len(a), (a[i] == a_in[i])</font>
        a[x] = a[x] * a[x]
        <font color="#1E90FF">#PREMISES FOR ATTACHED PROOF, IF ANY: </font>
        <font color="#1E90FF"># (a[x] == (a_old[x] * a_old[x]))</font>
        <font color="#1E90FF"># (x < len(a_old))</font>
        <font color="#1E90FF"># (x >= 0)</font>
        <font color="#1E90FF"># forall 0 <= i < x, (a_old[i] == (a_in[i] * a_in[i]))</font>
        <font color="#1E90FF"># forall x <= i < len(a_old), (a_old[i] == a_in[i])</font>
        <font color="#1E90FF"># (len(a) == len(a_old))</font>
        <font color="#1E90FF"># forall 0 <= _i < len(a), ((_i == x) or (a_old[_i] == a[_i]))</font>
        <font color="#1E90FF"># forall 0 <= i < x, (a[i] == (a_in[i] * a_in[i]))</font>
        <font color="#1E90FF"># forall (x + 1) <= i < len(a), (a[i] == a_in[i])</font>
        <font color="#008B00">"""{ 1.<font color="#00FF00">OK</font>  a[x] == a_old[x] * a_old[x]                        premise
             2.<font color="#00FF00">OK</font> forall 0 <= i < x, a[i] == (a_in[i] * a_in[i])      premise
             3.<font color="#00FF00">OK</font> forall x <= i < len(a_old), a_old[i] == a_in[i]     premise
             4.<font color="#00FF00">OK</font> a_old[x] == a_in[x]                                 foralle x 3
             5.<font color="#00FF00">OK</font> a[x] == a_in[x] * a_in[x]                           subst 4 1
             6.<font color="#00FF00">OK</font> forall 0 <= i < (x+1), a[i] == (a_in[i] * a_in[i])  foralli 2 5
             7.<font color="#00FF00">OK</font> forall (x+1) <= i < len(a), a[i] == a_in[i]         premise
             8.<font color="#00FF00">OK</font> return 6 7
        }"""</font>
        <font color="#1E90FF">#PREMISES FOR NEXT LINE: </font>
        <font color="#1E90FF"># forall 0 <= i < (x + 1), (a[i] == (a_in[i] * a_in[i]))</font>
        <font color="#1E90FF"># forall (x + 1) <= i < len(a), (a[i] == a_in[i])</font>
        x = x + 1
        <font color="#1E90FF">#PREMISES FOR ATTACHED PROOF, IF ANY: </font>
        <font color="#1E90FF"># (x == (x_old + 1))</font>
        <font color="#1E90FF"># forall 0 <= i < (x_old + 1), (a[i] == (a_in[i] * a_in[i]))</font>
        <font color="#1E90FF"># forall (x_old + 1) <= i < len(a), (a[i] == a_in[i])</font>
        <font color="#008B00">"""{ 1.<font color="#00FF00">OK</font> forall 0 <= i < (x_old+1), a[i] == (a_in[i] * a_in[i]) premise
             2.<font color="#00FF00">OK</font> forall (x_old + 1) <= i < len(a), a[i] == a_in[i]     premise
             3.<font color="#00FF00">OK</font> x == x_old + 1                                       premise
             4.<font color="#00FF00">OK</font> forall 0 <= i < x, a[i] == (a_in[i] * a_in[i])       subst 3 1
             5.<font color="#00FF00">OK</font> forall x <= i < len(a), a[i] == a_in[i]              subst 3 2
             6.<font color="#00FF00">OK</font> return 4 5
        }"""</font>
        <font color="#1E90FF">#PREMISES FOR NEXT LINE: </font>
        <font color="#1E90FF"># forall 0 <= i < x, (a[i] == (a_in[i] * a_in[i]))</font>
        <font color="#1E90FF"># forall x <= i < len(a), (a[i] == a_in[i])</font>
    <font color="#1E90FF">#PREMISES FOR NEXT LINE: </font>
    <font color="#1E90FF"># (forall 0 <= i < x, (a[i] == (a_in[i] * a_in[i])) and forall x <= i < len(a), (a[i] == a_in[i]))</font>
    <font color="#1E90FF"># not (x != len(a))</font>

    <font color="#008B00">"""{ 1.<font color="#00FF00">OK</font> (forall 0 <= i < x, a[i] == (a_in[i] * a_in[i])) and (forall x <= i < len(a), (a[i] == a_in[i]))                       premise
         2.<font color="#00FF00">OK</font> not (x != len(a))                      premise
         3.<font color="#00FF00">OK</font> x == len(a)                            algebra 2
         4.<font color="#00FF00">OK</font> forall 0 <= i < x, a[i] == (a_in[i] * a_in[i])   ande 1
         5.<font color="#00FF00">OK</font> forall 0 <= i < len(a), a[i] == (a_in[i] * a_in[i])   subst 3 4
    }"""</font>
    <font color="#1E90FF">#PREMISES FOR NEXT LINE: </font>
    <font color="#1E90FF"># forall 0 <= i < len(a), (a[i] == (a_in[i] * a_in[i]))</font>
<font color="#1E90FF">#PREMISES FOR NEXT LINE: </font>

</strong></pre></body></html>
