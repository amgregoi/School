Andy Gregoire

1)
	1	2
  D 1	4
  P 1	5
  
  D(i) < D(j) --> (1*1)+((4+1)*5) = 26
  D(i) > D(j) --> (4*5)+((4+1)*1) = 25
  This is an example of a counterxample, showing that D(i) < D(j) is not optimal
  
2)
	1	2
  D 2	4
  P	3	5
  
  P(i) > P(j) --> (5*4)+((4+2)*3) = 38
  P(i) < P(j) --> (3*2)+((4+2)*5) = 36
  This is an example of a counterexample, showing that P(i) > P(j) is not optimal
  

3.1)

	1	2
  D	1	4
  P 1	5
  R	1	1.25
  
  R(i) > R(j) --> (4*5)+((4+1)*1) = 25
  which turns out to be the optimal solution, the only other iteration would yield (1*1)+((4+1)*5) = 26
  
  
  
	1		2
  D 2		4
  P	3		5
  R	1.5		1.25
  
  R(i) > R(j) --> (3*2)+((4+2)*5) = 36
  which turns out to be the optimal solution, the only other iteratiou would yield (5*4)+((4+2)*3) = 38
  

3.2)

	1		2
  D 5		2
  P	7		4
  R	1.4		2
  
  Schedule 1) 1,2
	(5*7)+((5+2)*4) = 63
  
  Schedule 2) 2,1 (optimal)
	(2*4)+((5+2)*7) = 57
	
By choosing the processes with the greater R value first we minimize the overall cost of our schedule.


R(i) > R(j)
P(i)/D(i) > P(j)/D(j)
P(i)*D(j) > P(j)*D(i)

Based on the above equation if the Durations were the same, the deciding factor would be priority, as well as if, the priorities were equal duration would become the deciding factor.
So our optimal solution is doing shortest job and highest priority scheduling together in order to become optimal.

we sort the R values of the processes to be scheduled in order to come up with the optimal schedule.
